on:
  workflow_call:
    inputs:
      release_version:
        type: string

env:
  OUTPUT_DIR: /tmp/output
  otel-exporter-otlp-endpoint: lcedt.fatcowshrine.com:443/
  otel-service-name: o11y.workflows
  otel-resource-attributes: deployment.environent=dev,service.version=0.1.0

jobs:
  conda:
    runs-on: ubuntu-latest
    container: condaforge/miniforge3:latest
    steps:
      - name: Setup telemetry
        id: setup-telemetry
        uses: krzko/setup-telemetry@v0.5.2
        with:
          observability-backend-url: ${{ env.otel-exporter-otlp-endpoint }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - run: ./ci/build-test/conda.sh
        env:
          RELEASE_VERSION: ${{ inputs.release_version }}
      - uses: actions/upload-artifact@v4
        with:
          name: conda_artifacts
          path: ${{ env.OUTPUT_DIR }}
      - name: Export job telemetry
        if: always()
        uses: krzko/export-job-telemetry@v0.3.0
        with:
          created-at: ${{ steps.setup-telemetry.outputs.created-at }}
          job-status: ${{ job.status }}
          job-name: ${{ steps.setup-telemetry.outputs.job-name }}
          otel-exporter-otlp-endpoint: ${{ env.otel-exporter-otlp-endpoint }}
          otel-resource-attributes: "foo.new_attribute=123,${{ env.otel-resource-attributes }}"
          otel-service-name: ${{ env.otel-service-name }}
          started-at: ${{ steps.setup-telemetry.outputs.started-at }}
          traceparent: ${{ steps.setup-telemetry.outputs.traceparent }}
  wheel:
    runs-on: ubuntu-latest
    container: python:3.9
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - run: ./ci/build-test/wheel.sh
        env:
          RELEASE_VERSION: ${{ inputs.release_version }}
      - uses: actions/upload-artifact@v4
        with:
          name: wheel_artifacts
          path: ${{ env.OUTPUT_DIR }}
